[project]
name = "PoC-Task-Manager"
version = "0.1.0"
description = "Example LangGraph project for deployment to LangGraph Cloud"
authors = [
    { name = "langchain-ai" }
]
packages = [
    { include = "backend" }
]
requires-python = ">=3.11,<3.13"

dependencies = [
    "langgraph==0.4.3",
    "langchain-anthropic==0.3.13",
    "langchain-core==0.3.59",
    "langchain-openai==0.3.16",
    "tavily-python==0.7.2",
    "langchain-community==0.3.24",
    "pydantic==2.11.4",
    "langgraph-api==0.2.27",
    "langgraph-runtime-inmem==0.0.11",
    "langgraph-cli[inmem]==0.2.10",
    "fastapi==0.115.12",
    "uvicorn==0.34.2",
    "python-multipart==0.0.20",
    "fastmcp==2.3.3",
    "pytest==8.2.1",
    "pytest-cov==5.0.0",
    "python-dotenv==1.0.1"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend"]

[tool.pytest.ini_options]
# TEMPORARY: Filter Pydantic deprecation warnings from langgraph's internal use of model_fields
# This warning appears because langgraph (v0.4.3) uses Pydantic's deprecated model_fields access
# on instances instead of classes. This will be fixed in a future langgraph release.
# TODO: Remove this filter when upgrading to a langgraph version that uses Pydantic v3's
# recommended approach for accessing model fields.
filterwarnings = [
    "ignore::pydantic.PydanticDeprecatedSince211"
]